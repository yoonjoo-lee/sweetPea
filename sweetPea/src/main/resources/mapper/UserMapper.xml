<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="pea.board.mapper.UserMapper">

	<!-- 로그인 시 아이디에 해당하는 비밀번호 가져오기  -->
	<select id="selectId" parameterType="userVo" resultType="userVo">
		SELECT pwd 
			FROM pea_user 
			WHERE id=#{id}
			AND delyn ='N'
	</select>
	<select id="selectMy" parameterType="userVo" resultType="userVo">
		SELECT pwd 
			FROM pea_user 
			WHERE uidx=#{uidx}
			AND delyn ='N'
	</select>

	<select id="login" parameterType="userVo" resultType="userVo">
		SELECT *
		  FROM pea_user
		 WHERE id = #{id}
		   AND delyn = 'N'
	</select>
	
	<select id="idCheck" parameterType="string" resultType="string">
		SELECT id 
		  FROM pea_user
		 WHERE id = #{id}
		   AND delyn = 'N'
	</select>
	
	<insert id="insert" parameterType="userVo">
		INSERT INTO pea_user(
				  id
				, pwd
				, name
				, birth
				, phone
				, email
				, addr
				, gender
				, ip
				, profile
		)VALUES(
				  #{id}
				, #{pwd}
				, #{name}
				, #{birth}
				, #{phone}
				, #{email}
				, #{addr} 
				, #{gender}
				, #{ip}
				, '/sweetPea/resources/images/1.png'
		)
	
	</insert>
	
	<select id="idExistCheck" parameterType="userVo" resultType="string">
		SELECT id 
		  FROM pea_user
		 WHERE email=#{email}
		   AND name=#{name}
		   AND delyn = 'N'
	</select>
	
	<select id="pwdExistCheck" parameterType="userVo" resultType="string">
		SELECT uidx 
		  FROM pea_user
		 WHERE email=#{email}
		   AND id=#{id}
	</select>
	
	<update id="changePwd" parameterType="userVo">
		UPDATE pea_user
		   SET pwd = #{pwd}
		 WHERE uidx = #{uidx}
	</update>
	
	<select id="userIdx" parameterType="int" resultType="userVo">
		SELECT *
		  FROM pea_user
		 WHERE uidx = #{uidx}
	</select>
	
	<select id="pwdCheck" parameterType="userVo" resultType="string">
		SELECT uidx
		  FROM pea_user
		 WHERE uidx = #{uidx}
		   AND pwd = #{pwd}
	</select>
	
	<update id="delId" parameterType="userVo">
		UPDATE pea_user
		   SET delyn = 'Y'
		   , delreason = #{delreason}
		 WHERE uidx = #{uidx}
	</update>
	
	<select id="userEmailCheck" parameterType="userVo" resultType="string">
		SELECT uidx
		  FROM pea_user
		 WHERE uidx = #{uidx}
		   AND email = #{email}
	</select>
	
	<update id="idxModify" parameterType="userVo">
		UPDATE pea_user
		   SET name   =	#{name}
		   	 , gender = #{gender}
		   	 , birth  =	#{birth}
		   	 , phone  =	#{phone}
		   	 , email  =	#{email}
		   	 , addr   =	#{addr}
		 WHERE uidx   =	#{uidx}
	</update>
	
	<update id="profileUpload" parameterType="userVo">
		UPDATE pea_user
		 SET profile = #{profile}
		WHERE uidx = #{uidx}
	</update>
	
	<!-- 랜덤사용자 표시 -->
	<select id="randomUser" parameterType="int" resultType="userVo">
		SELECT uidx
			 , name
			 , profile
			 , (SELECT count(*)
			 	  FROM pea_minihome_visit 
		 		 WHERE uidx=a.uidx) as visit
		 	 , (SELECT count(*)
		 	 	  FROM pea_minihome_visit 
				 WHERE DATE_FORMAT(visit_date, '%y-%m-%d') = DATE_FORMAT(sysdate(), '%y-%m-%d') 
				   AND uidx=a.uidx) as today
		  FROM pea_user a
		 WHERE delyn='N'
		 <if test="value != 0">
		   AND uidx != #{uidx}
		   AND uidx != all(select bfidx from pea_friends where uidx=#{uidx})
		   AND uidx != all(select uidx from pea_friends where bfidx=#{uidx})
		 </if>
		 ORDER BY rand() limit 36;
	</select>
</mapper>